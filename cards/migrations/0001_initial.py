# Generated by Django 4.2.16 on 2024-11-21 06:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anishinaabemowin', models.CharField(max_length=100)),
                ('english', models.CharField(max_length=100)),
                ('pronunciation', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('example_sentence', models.TextField(blank=True)),
                ('audio_file', models.FileField(blank=True, upload_to='card_audio/')),
            ],
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserCardProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_level', models.IntegerField(default=1)),
                ('last_reviewed', models.DateTimeField(default=django.utils.timezone.now)),
                ('next_review_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('round_completed', models.BooleanField(default=False)),
                ('last_review_result', models.BooleanField(default=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.card')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_name', models.CharField(blank=True, max_length=100, null=True)),
                ('study_streak', models.PositiveIntegerField(default=0)),
                ('last_study_date', models.DateField(blank=True, null=True)),
                ('total_cards_studied', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chosen_decks', models.ManyToManyField(blank=True, related_name='profiles', to='cards.deck')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='deck',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='decks', to='cards.tag'),
        ),
        migrations.AddField(
            model_name='card',
            name='deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='cards.deck'),
        ),
        migrations.CreateModel(
            name='UserDeck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_decks', to='cards.deck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_decks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'deck')},
            },
        ),
        migrations.CreateModel(
            name='DeckShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.CharField(choices=[('VIEW', 'View Only'), ('EDIT', 'Can Edit'), ('ADMIN', 'Admin Access')], default='VIEW', max_length=10)),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.deck')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_decks', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['shared_with', 'active'], name='cards_decks_shared__e4493b_idx'), models.Index(fields=['deck', 'active'], name='cards_decks_deck_id_18488e_idx')],
                'unique_together': {('deck', 'shared_with')},
            },
        ),
    ]
