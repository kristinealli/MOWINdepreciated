# Generated by Django 4.0.4 on 2024-11-15 23:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anishinaabemowin', models.CharField(max_length=100)),
                ('english', models.CharField(max_length=100)),
                ('pronunciation', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('example_sentence', models.TextField(blank=True)),
                ('audio_file', models.FileField(blank=True, upload_to='card_audio/')),
            ],
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserDeck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_reviewed', models.DateTimeField(auto_now_add=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0.0)),
                ('cards_mastered', models.PositiveIntegerField(default=0)),
                ('review_streak', models.PositiveIntegerField(default=0)),
                ('next_review_date', models.DateTimeField(blank=True, null=True)),
                ('custom_notes', models.TextField(blank=True)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('correct_answers', models.PositiveIntegerField(default=0)),
                ('incorrect_answers', models.PositiveIntegerField(default=0)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.deck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_reviewed'],
            },
        ),
        migrations.CreateModel(
            name='UserCardProgress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('box_level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('last_reviewed', models.DateTimeField(auto_now_add=True)),
                ('next_review_date', models.DateTimeField(blank=True, null=True)),
                ('round_completed', models.BooleanField(default=False)),
                ('known', models.BooleanField(default=False)),
                ('last_review_result', models.BooleanField(null=True)),
                ('review_history', models.JSONField(default=list)),
                ('total_attempts', models.PositiveIntegerField(default=0)),
                ('correct_attempts', models.PositiveIntegerField(default=0)),
                ('streak', models.PositiveIntegerField(default=0)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.card')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['next_review_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_streak', models.PositiveIntegerField(default=0)),
                ('last_study_date', models.DateField(blank=True, null=True)),
                ('total_cards_studied', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_name', models.CharField(blank=True, max_length=100)),
                ('decks_in_curriculum', models.ManyToManyField(blank=True, to='cards.deck')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeckShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.CharField(choices=[('VIEW', 'View Only'), ('EDIT', 'Can Edit'), ('ADMIN', 'Admin Access')], default='VIEW', max_length=10)),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.deck')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_decks', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_shares', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='deck',
            name='tags',
            field=models.ManyToManyField(blank=True, to='cards.tag'),
        ),
        migrations.AddField(
            model_name='card',
            name='deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='cards.deck'),
        ),
        migrations.AddIndex(
            model_name='userdeck',
            index=models.Index(fields=['user', 'last_reviewed'], name='cards_userd_user_id_54386f_idx'),
        ),
        migrations.AddIndex(
            model_name='userdeck',
            index=models.Index(fields=['user', 'is_favorite'], name='cards_userd_user_id_00e3d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userdeck',
            unique_together={('user', 'deck')},
        ),
        migrations.AddIndex(
            model_name='usercardprogress',
            index=models.Index(fields=['user', 'next_review_date'], name='cards_userc_user_id_f6f4db_idx'),
        ),
        migrations.AddIndex(
            model_name='usercardprogress',
            index=models.Index(fields=['user', 'box_level'], name='cards_userc_user_id_72c33c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usercardprogress',
            unique_together={('user', 'card')},
        ),
        migrations.AddIndex(
            model_name='deckshare',
            index=models.Index(fields=['shared_with', 'active'], name='cards_decks_shared__e4493b_idx'),
        ),
        migrations.AddIndex(
            model_name='deckshare',
            index=models.Index(fields=['deck', 'active'], name='cards_decks_deck_id_18488e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deckshare',
            unique_together={('deck', 'shared_with')},
        ),
    ]
